import React from 'react/addons';
import classNames from 'classnames';


const formRowWrapper = function(htmlFor, label, elem) {
    return (
        <div className="form-group">
            <label className="col-sm-2 control-label" htmlFor={htmlFor}>{label}</label>
            <div className="col-sm-10">
                {elem}
            </div>
        </div>
    );
};


export class FormRowInput extends React.Component {
    onChange(event) {
        let value = event.target.value;
        this.props.onChange(value);
    }

    render() {
        // TODO: allow id to be autogenerated if not passed in
        let id = 'FormRow-' + this.props['data-id'];
        let placeholder = this.props.placeholder || this.props.label;
        let rw = (<input type="text" className="form-control" id={id} placeholder={placeholder} value={this.props.value} onChange={this.onChange.bind(this)}/>);
        let ro = (<p className="form-control-static" id={id}>{this.props.value}</p>);
        return formRowWrapper(id, this.props.label, (this.props.editable ? rw : ro));
    }
}

export class FormRowCheckbox extends React.Component {
    onChange(event) {
        this.props.onChange(event.target.checked);
    }

    render() {
        let elem = (<input type="checkbox" checked={this.props.value} disabled={!this.props.editable} onChange={this.onChange.bind(this)} />);
        var divClasses = classNames(
            "checkbox", {disabled: !this.props.editable}
        );
        return (
            <div className="form-group">
                <div className="col-sm-offset-2 col-sm-10">
                    <div className={divClasses}>
                        <label>
                            {elem} {this.props.label}
                        </label>
                    </div>
                </div>
            </div>
        );
    }
}

export class FormRowSelect extends React.Component {
    onChange(event) {
        let value = event.target.value;
        this.props.onChange(value);
    }

    render() {
        // TODO: allow id to be autogenerated if not passed in
        let id = 'FormRow-' + this.props['data-id'];
        let rw = (
            <select className="form-control" id={id} value={this.props.value} onChange={this.onChange.bind(this)}>
                {this.props.children}
            </select>
        );
        let ro = (<p className="form-control-static" id={id}>{this.props.value}</p>);
        return formRowWrapper(id, this.props.label, (this.props.editable ? rw : ro));
    }
}
